Matrix ''module for matrix related operations

The function ''matrix_divided'' accepts a a list of lists of integer/floats of equal length
and a scalar value. It divides each collumn of the list by the scalar and return the result

How to use; ''import the module''

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> ls = [[3, 4, 5], [8, 9, 6], [7.3, 4.5, 1]]
>>> matrix_divided(ls, 2)
[[1.5, 2.0, 2.5], [4.0, 4.5, 3.0], [3.65, 2.25, 0.5]]
>>> ls0 = [3, 8, 9, 74, 7]
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> ls1 = [[23, 4, 9, 9], [3.5, 9, 3], [5, 8]]
Traceback (most recent call last):
	...
TypeError: Each row of the matrix must have the same size
>>> ls2 = [[4, 5, 8, 5, 32], ['2', 8, 9, 90, 9]]
>>> matrix_divided(ls2, 10)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> ls3 = [[2, 4], [4, 1], [7, 3]]
>>> matrix_divided(ls3, None)
Traceback (most recent call last):
	...
TypeError: div must be a number
>>> ls3 = [[2, 4], [4, 1], [7, 3]]
>>> matrix_divided(ls3, (4))
[[0.5, 1.0], [1.0, 0.25], [1.75, 0.75]]
>>> ls3 = [[2, 4], [4, 1], [7, 3]]
>>> matrix_divided(ls3, (4,))
Traceback (most recent call last):
	...
TypeError: div must be a number
